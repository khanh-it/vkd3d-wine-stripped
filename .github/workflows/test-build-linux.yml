name: Test Builds on Linux

on: [push, pull_request, workflow_dispatch]

jobs:
  build-set-linux:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout code (no submodules)
      uses: actions/checkout@v4
      with:
        submodules: false
        fetch-depth: 1

    - name: Force git:// -> https:// for submodules and fetch them
      run: |
        # rewrite git:// URLs to https:// so CI can clone nested submodules reliably
        git config --global url."https://github.com/".insteadOf git://github.com/
        # initialize submodules (depth=1 speeds up CI)
        git submodule update --init --recursive --depth=1

    - name: Setup problem matcher
      uses: Joshua-Ashton/gcc-problem-matcher@v3

    - name: Build MinGW x86
      id: build-mingw-x86
      uses: Joshua-Ashton/arch-mingw-github-action@v8
      with:
        command: |
          meson setup -Denable_tests=True -Denable_extras=True --cross-file=build-win32.txt --buildtype release build-mingw-x86
          ninja -C build-mingw-x86

    - name: Build MinGW x64
      id: build-mingw-x64
      uses: Joshua-Ashton/arch-mingw-github-action@v8
      with:
        command: |
          meson setup -Denable_tests=True -Denable_extras=True --cross-file=build-win64.txt --buildtype release build-mingw-x64
          ninja -C build-mingw-x64

    - name: Build Native GCC x86
      id: build-native-gcc-x86
      uses: Joshua-Ashton/arch-mingw-github-action@v8
      with:
        command: |
          sudo pacman -Syu --noconfirm lib32-gcc-libs
          export CC="gcc -m32"
          export CXX="g++ -m32"
          export PKG_CONFIG_PATH="/usr/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig:/usr/lib/pkgconfig"
          meson setup -Denable_tests=True -Denable_extras=True -Dc_args='-Wformat=2 -Wno-format-truncation -Wno-format-nonliteral' --buildtype release build-native-gcc-x86
          ninja -C build-native-gcc-x86

    - name: Build Native GCC x64
      id: build-native-gcc-x64
      uses: Joshua-Ashton/arch-mingw-github-action@v8
      with:
        command: |
          export CC="gcc"
          export CXX="g++"
          meson setup -Denable_tests=True -Denable_extras=True -Dc_args='-Wformat=2 -Wno-format-truncation -Wno-format-nonliteral' --buildtype release build-native-gcc-x64
          ninja -C build-native-gcc-x64

    - name: Build Native Clang x86
      id: build-native-clang-x86
      uses: Joshua-Ashton/arch-mingw-github-action@v8
      with:
        command: |
          sudo pacman -Syu --noconfirm lib32-gcc-libs
          export CC="clang -m32"
          export CXX="clang++ -m32"
          export PKG_CONFIG_PATH="/usr/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig:/usr/lib/pkgconfig"
          meson setup -Denable_tests=True -Denable_extras=True --buildtype release build-native-clang-x86
          ninja -C build-native-clang-x86

    - name: Build Native Clang x64
      id: build-native-clang-x64
      uses: Joshua-Ashton/arch-mingw-github-action@v8
      with:
        command: |
          export CC="clang"
          export CXX="clang++"
          meson setup -Denable_tests=True -Denable_extras=True --buildtype release build-native-clang-x64
          ninja -C build-native-clang-x64

    - name: Build release
      id: build-release
      uses: Joshua-Ashton/arch-mingw-github-action@v8
      with:
        command: |
          export VERSION_NAME="${GITHUB_REF##*/}-${GITHUB_SHA##*/}"
          ./package-release.sh ${VERSION_NAME} build --no-package
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV

    - name: Upload artifacts
      id: upload-artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vkd3d-wine-${{ env.VERSION_NAME }}
        path: build/vkd3d-wine-${{ env.VERSION_NAME }}
        if-no-files-found: warn